/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.100.3
*/

import {
  Account,
  BigNumberish,
  BN,
  decompressBytecode,
  Script as __Script,
  StrSlice,
} from 'fuels';

import type { Enum } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;

export type RemoveLiquidityScriptInputs = [pool_id: [AssetIdInput, AssetIdInput, boolean], liquidity: BigNumberish, amount_0_min: BigNumberish, amount_1_min: BigNumberish, recipient: IdentityInput, deadline: BigNumberish];
export type RemoveLiquidityScriptOutput = [BN, BN];

export type RemoveLiquidityScriptConfigurables = Partial<{
  AMM_CONTRACT_ID: ContractIdInput;
}>;

const abi = {
  "programType": "script",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "(struct std::asset_id::AssetId, struct std::asset_id::AssetId, bool)",
      "concreteTypeId": "a95e1fcceb1451b8a76471f593f66c4a52ca04bde3c227c746ad7aaf988de5c6",
      "metadataTypeId": 1
    },
    {
      "type": "(u64, u64)",
      "concreteTypeId": "41bd1a98f0a59642d8f824c805b798a5f268d1f7d05808eb05c4189c493f1be0",
      "metadataTypeId": 0
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 4
    },
    {
      "type": "str",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    },
    {
      "type": "struct std::contract_id::ContractId",
      "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "metadataTypeId": 7
    },
    {
      "type": "u32",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "(_, _, _)",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": 6
        },
        {
          "name": "__tuple_element",
          "typeId": 6
        },
        {
          "name": "__tuple_element",
          "typeId": 3
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 2
    },
    {
      "type": "bool",
      "metadataTypeId": 3
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "Address",
          "typeId": 5
        },
        {
          "name": "ContractId",
          "typeId": 7
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "pool_id",
          "concreteTypeId": "a95e1fcceb1451b8a76471f593f66c4a52ca04bde3c227c746ad7aaf988de5c6"
        },
        {
          "name": "liquidity",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "amount_0_min",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "amount_1_min",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "recipient",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "deadline",
          "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ],
      "name": "main",
      "output": "41bd1a98f0a59642d8f824c805b798a5f268d1f7d05808eb05c4189c493f1be0",
      "attributes": null
    }
  ],
  "loggedTypes": [
    {
      "logId": "10098701174489624218",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "AMM_CONTRACT_ID",
      "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "offset": 7032
    }
  ]
};

const bytecode = decompressBytecode('H4sIAAAAAAAAA5VZbWwcRxme+0hzIWkzqe3muqnDQttgRAsHtCW/yGwv17vrxbpxncOxku2O67p12pIeTmwsJOhRAYoqfhgk2og/5B8RQmj9kcR2pHJCgCI+xElUIlRCckQrJWqv8o9GctQf4Xl35uLz3joVJ1l7NzvvO8+8n8+MrdUMO8VYkgUf64p+7pl2b9Vj/NYt9jPGbPnB6ln5Hp4rgtlrX2dHPlmJy09WkpD7yPpQYk5iUR6dOzsi2Ge8JpuQ2fkZmZ9dtK5D4/s8JBPrtvINpprcxpwrm8zZTnNkybdVkds0J/R+D73v6ufMkoxNHWLJrhwXluRs6iCLPYEdSG/WVp5vy1zVVjmbnuLZnGARunZbLzeixndZL0aOb7dGI8e3BJiKwFBg3YTnNpb87Iz3If+aLM2l9X7tsB3/YZWw37KvVD+wFnlKFTO2HJwfVwO8D+85dIx7H7JHZWl2bRMdbxsdIkpHJ172F8IbMf5H0hMx/rZVjhxftLINNnGYpffmeoQ7tMp24YnffG/xYf0bz95cd22iwFJ7i4/V3DKNPVSnsV6nG/bxZ1SuWvCaZ/d4zZkHvGatV+a4UjnRh3h60B3y97ij/gNu1u918/6DsKOvitWCLM+tqX7RJwfn9st/zZ+zrtuwi2TW1Rqz/gMb/TvDvCaf9JpiKoT5Ny4wu/lGDPpPYs4pxOwZmZ8rWNfDsZj4BuYxt9SIueVG3B2AP4fm90PmRa9pj3vNzHHIVa3riK1g7bD8lh9vkHdYDD6RkH8J8i9D/hXIn9Y+hY5O+ckWVuiIy/K8DczPQ34M8i/I7JyyrmcgG/ZL4nPkF9i2pnKMq2HOXUfF3GHFHh5m7BeMffbNFNYM8pdVrexZZuVnmFWC7corTA76Qd5RblpXO/J+N2ECjm3QX5BZH/GFeR0Y2P2EQTVRO7K+VFnkI54TB5ndV0wK62PGfk5r38ywM8DyFjA9vRZg29rCpnEBU2mFeTmM3cA6N+3W/K1mfvte1PpeVpjbj4Em8oDyouzb9HtCMpv3P848J8OAxyZcsJFNuoFHtelv4dm5EQ/0Fhk7VrQD/bw/I0iXdQPxd5O3ZHeGsbXLukYWWFItLCF5s/aBW+t72+5bJ6HjVeztZdjkxSqzRhVzs5K5noxZR6E7v7qT53jdLa1yXrTryL9dvCLrXzoEHYE/MyEfxeeCOCnPUa4I+GYnng5ick3lMlyWL6RVP+fRsrE1KQRibBH2qyMfz5/RcdCxxq+Deg77Qxfq/iUO3cFTlvE3eEmoAdSs0iWBXOZqAPHiCFs5GXtCMPFk8SD8hHelefQDiqW5ceVAD3wW1Pb8YgP+EzK72JD5Jeim73gGcbfEpYNnfnmVfKzxXvSD79nziPGouE2+p23iT6t+mje76jXlN2GbJGxzALa5RjmFPFZqAPt2REE5tT6ZXV6VpYsNjfG80PWoQ/ffA91DsylVoXkXJfaC+r5Q26QX/sHksQjWzC6vBPOzCzOdtTi+w8yVmJuW2Qt1BTvK0oUV9NE01qi3ekdnnUme1rKzGS27BFnIkHx+qQ4da3pfF9PBeH4BvVvvL0LXpNFV0LqW4ctAlzjmUD9cBqaF/RrTLOq8nUZNl/Tb/a7/tHvSL6HOH+JFLnpGvsCmFIuhltw1oVh8z8ifGf9OTeyrMtbX+46wTlUZz72D3g692fmU12yMeM36c6iNo9A9rdefb2jMy+MGzzj2dC74Dt/Rd+DB+qwPPeaNLmCcEuwr5rvA97ibXd3+hKA1FiTiKYVYndH2uDCtdZ+/Zl3TsRRhj6SxR92sXwtkspfAk5ZriJlpY9szRlfqDrbda3RdMbp8rWvZRx4s0hhs9cU2nFWDUxndDesaxUCU7sS7Rjf6cRADVwzOKmx0BTgzBqfRtbC6Oc7Ex0aXtnN2eb/Bub+F0x1cvZcPiDrGLpt3l2GPlJmfwprGf0vTyFnKX3w/Px2ds7ExE/vkY+THJcIY5AvWC8Yievu9WuaSkqVF+IDqXJhXJbZpLjq3SHwKPe8oasAx4EDf7cDwiMFwRmNdhD9Rn8oXCqh7ZHvDiVHrO+31tJGl2kR7XiWbuI6dhB1WoWNG67hwu45H6HjJ6LhsbEi1hXRsgV0lcvicqQPgSpvVgcSw0bFidOiYxBM4WnGBuF00fjoP7hLpj5jRgz4S+COj/XEpA9nT0f6I/07LzKPWSdSdeYE+tuNRZ+EZS4B7HgQvKS3A/y1estFXkyx+t4m5PuhPAWcVawbPsK8mWez9KP6L8Q8CHaW5c/BzBf7+FuRhRxvYlyRsgHpF+1lSbn72EVlaUrJop9zy7KPaDmfDHOjdIH6G5q+Bh34fNawL/PYHcnR+TY1ILocu9KlKLbAF8ceQLPoTcbuZ8PifdD9dQL0TPwSHgE7xuhxcSKuBoGfvBy82OsO9mG2H/7V9YBvsK6VcxP2NKrgP+MVNZfjHgVthLgZuJdq5lamTceJx0NsFLqV9nF/njqG1dxo+CPv5HLyLo67ejVofd0t+4rFY8hn8vofqLHiYiOB5bVwotoHn6XMP9eRZ1M4OvvqUNUjrijR47Yoa9NNyyE+rSvB7Wg3ItOv5O92jwDPo78K7NfRmwoj9kI9wPsFv9IMunGtS3NkieOUg66lUalOHTW86jN5UGRN8+DDbd4R60ySzjlWJX54Fj+HcmWQ4x/R4jmRUl92y393nPC7QfwJ9wO97zep9XlPtRswhr9DDnUwa45exL/xGL6XfeMoyerQeM/HRwbs/b/jLONmEeJzmtrDZuk1b/r3NbeHfQoujThSSbF8B4wXsoeyn0U8TNIZnEufQLeDU6NmwTwl2dOy0dSPwWeFO/Bf6x0M+k7SPQBfOEIiHNOyyBfaBH32Bs1FK9osU5iCHaR1B3M7sBbo+lafrdXr6kwJ3BLEuPK0bsNe6XAvjgTaMa+2yFnjzPuLOh6rYeyaNvd+PPwvY63RGIq6qz34deVaUxGOHEJcVgTnA1DkH/mcBJ6K7i324y7AkrSN6cF9wH9bZjfyivet6/V5HjX0dOrauv+/gjt9DPnVxhxHWc8CiKOZ1zHTUmlGzpysB/876V/B9BvUE88P5FBukfIK+aVWh9x26fk93BU86B+vEwRXVA+2ztTbbHzC2f63N9rhL2BAfZ4h/TxxidssHLZu7jmBuReA8K3AmFwmvlzGvV8a8XhX3ekUC+MG/M4xkda/syJHfmhzhQY7omjRNNQlryNZ5PCTzz+AsPtiIYe+nsXfU2I69f0R7J1sjj3fAl3cjbu7ZpL7fZc7Ai212eU3bJdZW61g9ZBfkPw/8GNI3Qmt3DWTYlGRHEH/crbB4V0Uy1KlB2IvxyuE6bIb7Mb+gXOrB1bCOo5bXYPe5k2LqWFDbvoq545vM/RHNlaP+ETVC72vh9wV9V4Zz6vs4r17t2P+zRj7Q3bq7Cc15kuaoZpUDB4wK/3iwPT1Hqc9o3SGZ4y5k3FHc7zjIJ6cWg8z0JnsYpDhADa7Jo4i3YbKrCs95i/ptn9Nd9wYk9boYcSLju/q672KtmproOPM76JOokW31MXGHubFN5rbXUjvizoYj5uLgLQn0Oo7ajFppE0Y74o7lds0L6+kZeEhYFfR2qXtb0AcOV1mPvtuksVhfhWopZNf1tvI5aj+424jcT3vdbdvPSsARrA/8jnsniu+gFqBO9lQQ57r/bkO+cerREfkY3EH1DSTrHu5/vVwGtg1qEWzSUYtuYwce3sIfYMn6t/0CWX4nP24iG9jg/5YN2WCSsaFNdLTXiw22lKhvuLeMb6LvV9YQ1YycMP7uRt1IoW7EqG5YR+DzwyxBtWPiCDjO8JjAO+a6dJdOPQ35d3VjvkDnm6STuI43oIK4RM2GbzbWU8x7g3zjol4h/9izDoed6DsTHu7GTH61+6mVX+17bUTkAXhw0MMWKU+xb82niF94/mfA87aDy+2ge0ieS4qeSk+Lx21t8Tjs1ebDlZrmcqc0lxtCHUQv584pBl5I+k+Ds+0CZ7sXOdcF3rtfn4mI82HdIgMvCvKv0ZYnUXuYidgDeClhB0fNo97nA+x3AftW8OVUcG840IMcyEVhT7VhF4Sd504Juj8FNtyzV7cBM/5XI3AWgK005uBM34Z5JgJze/2Rd7B7cNbXvAjz/9sRc6/evtMebMQ93Id6RR7zigI1MlhbfvqdsKkT5t42fFagzy18Do6NPP/K8RNjdnXk5Mmx5/WLO3yem5w4Qc/iiZOTL7xwfPT42IlT9si3X508AQvj87fgw+Kkmz4/ffivT/zkqS//Uv9qaenZYZ7d5vmIfvIz+rnNvN/88z+EivUomBsAAA==');

export class RemoveLiquidityScript extends __Script<RemoveLiquidityScriptInputs, RemoveLiquidityScriptOutput> {

  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(wallet: Account) {
    super(bytecode, abi, wallet);
  }
}
