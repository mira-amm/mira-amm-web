/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.2
*/

import {Contract as __Contract, Interface} from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  FunctionFragment,
  InvokeFunction,
} from "fuels";

import type {Option, Enum} from "./common";

export enum AccessErrorInput {
  NotOwner = "NotOwner",
}
export enum AccessErrorOutput {
  NotOwner = "NotOwner",
}
export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;
export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;
export enum SetProxyOwnerErrorInput {
  CannotUninitialize = "CannotUninitialize",
}
export enum SetProxyOwnerErrorOutput {
  CannotUninitialize = "CannotUninitialize",
}
export enum SimpleProxyErrorInput {
  AlreadyInitialized = "AlreadyInitialized",
  InvalidOwner = "InvalidOwner",
}
export enum SimpleProxyErrorOutput {
  AlreadyInitialized = "AlreadyInitialized",
  InvalidOwner = "InvalidOwner",
}
export type StateInput = Enum<{
  Uninitialized: undefined;
  Initialized: IdentityInput;
  Revoked: undefined;
}>;
export type StateOutput = Enum<{
  Uninitialized: void;
  Initialized: IdentityOutput;
  Revoked: void;
}>;

export type AddressInput = {bits: string};
export type AddressOutput = AddressInput;
export type ContractIdInput = {bits: string};
export type ContractIdOutput = ContractIdInput;
export type ProxyOwnerSetInput = {new_proxy_owner: StateInput};
export type ProxyOwnerSetOutput = {new_proxy_owner: StateOutput};
export type ProxyTargetSetInput = {new_target: ContractIdInput};
export type ProxyTargetSetOutput = {new_target: ContractIdOutput};

export type SimpleProxyConfigurables = Partial<{
  DEPLOYER: AddressInput;
}>;

const abi = {
  programType: "contract",
  specVersion: "1.1",
  encodingVersion: "1",
  concreteTypes: [
    {
      type: "()",
      concreteTypeId:
        "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
    },
    {
      type: "enum SimpleProxyError",
      concreteTypeId:
        "1b808c062f9cb48a1ff8a0c33a9f590016122eed669e86a6c152c7b4a19d8239",
      metadataTypeId: 1,
    },
    {
      type: "enum src5::AccessError",
      concreteTypeId:
        "f1247475d0d1466599267010f088190f8664dd31663a40c5d5e525d8e64b995d",
      metadataTypeId: 2,
    },
    {
      type: "enum src5::State",
      concreteTypeId:
        "287a382c1e0b1f11d12a422e77a248d27761327cd17515cc6e6369d528cf31ca",
      metadataTypeId: 3,
    },
    {
      type: "enum std::identity::Identity",
      concreteTypeId:
        "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      metadataTypeId: 4,
    },
    {
      type: "enum std::option::Option<struct std::contract_id::ContractId>",
      concreteTypeId:
        "0d79387ad3bacdc3b7aad9da3a96f4ce60d9a1b6002df254069ad95a3931d5c8",
      metadataTypeId: 5,
      typeArguments: [
        "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      ],
    },
    {
      type: "enum upgradability::errors::SetProxyOwnerError",
      concreteTypeId:
        "077440f455d1eb83361f2183e189067ac3bf4bb6166b7a0630f371593ebb274e",
      metadataTypeId: 6,
    },
    {
      type: "struct std::address::Address",
      concreteTypeId:
        "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      metadataTypeId: 8,
    },
    {
      type: "struct std::contract_id::ContractId",
      concreteTypeId:
        "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      metadataTypeId: 9,
    },
    {
      type: "struct upgradability::events::ProxyOwnerSet",
      concreteTypeId:
        "3c23b359912e25002dc894bca0ea08e15bcae108cb5ed17b9cb5ca3fed321e5d",
      metadataTypeId: 10,
    },
    {
      type: "struct upgradability::events::ProxyTargetSet",
      concreteTypeId:
        "47d9868a6266fb294f68de9d33690c9e627c37425d784cc82b7a7b7e5635b779",
      metadataTypeId: 11,
    },
  ],
  metadataTypes: [
    {
      type: "b256",
      metadataTypeId: 0,
    },
    {
      type: "enum SimpleProxyError",
      metadataTypeId: 1,
      components: [
        {
          name: "AlreadyInitialized",
          typeId:
            "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
        },
        {
          name: "InvalidOwner",
          typeId:
            "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
        },
      ],
    },
    {
      type: "enum src5::AccessError",
      metadataTypeId: 2,
      components: [
        {
          name: "NotOwner",
          typeId:
            "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
        },
      ],
    },
    {
      type: "enum src5::State",
      metadataTypeId: 3,
      components: [
        {
          name: "Uninitialized",
          typeId:
            "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
        },
        {
          name: "Initialized",
          typeId: 4,
        },
        {
          name: "Revoked",
          typeId:
            "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
        },
      ],
    },
    {
      type: "enum std::identity::Identity",
      metadataTypeId: 4,
      components: [
        {
          name: "Address",
          typeId: 8,
        },
        {
          name: "ContractId",
          typeId: 9,
        },
      ],
    },
    {
      type: "enum std::option::Option",
      metadataTypeId: 5,
      components: [
        {
          name: "None",
          typeId:
            "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
        },
        {
          name: "Some",
          typeId: 7,
        },
      ],
      typeParameters: [7],
    },
    {
      type: "enum upgradability::errors::SetProxyOwnerError",
      metadataTypeId: 6,
      components: [
        {
          name: "CannotUninitialize",
          typeId:
            "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
        },
      ],
    },
    {
      type: "generic T",
      metadataTypeId: 7,
    },
    {
      type: "struct std::address::Address",
      metadataTypeId: 8,
      components: [
        {
          name: "bits",
          typeId: 0,
        },
      ],
    },
    {
      type: "struct std::contract_id::ContractId",
      metadataTypeId: 9,
      components: [
        {
          name: "bits",
          typeId: 0,
        },
      ],
    },
    {
      type: "struct upgradability::events::ProxyOwnerSet",
      metadataTypeId: 10,
      components: [
        {
          name: "new_proxy_owner",
          typeId: 3,
        },
      ],
    },
    {
      type: "struct upgradability::events::ProxyTargetSet",
      metadataTypeId: 11,
      components: [
        {
          name: "new_target",
          typeId: 9,
        },
      ],
    },
  ],
  functions: [
    {
      name: "proxy_target",
      inputs: [],
      output:
        "0d79387ad3bacdc3b7aad9da3a96f4ce60d9a1b6002df254069ad95a3931d5c8",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      name: "set_proxy_target",
      inputs: [
        {
          name: "new_target",
          concreteTypeId:
            "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
        },
      ],
      output:
        "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      name: "proxy_owner",
      inputs: [],
      output:
        "287a382c1e0b1f11d12a422e77a248d27761327cd17515cc6e6369d528cf31ca",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      name: "initialize_proxy",
      inputs: [
        {
          name: "owner",
          concreteTypeId:
            "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
        },
        {
          name: "target",
          concreteTypeId:
            "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
        },
      ],
      output:
        "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      attributes: [
        {
          name: "storage",
          arguments: ["write"],
        },
      ],
    },
    {
      name: "set_proxy_owner",
      inputs: [
        {
          name: "new_owner",
          concreteTypeId:
            "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
        },
      ],
      output:
        "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      attributes: [
        {
          name: "storage",
          arguments: ["write"],
        },
      ],
    },
  ],
  loggedTypes: [
    {
      logId: "17376141311665587813",
      concreteTypeId:
        "f1247475d0d1466599267010f088190f8664dd31663a40c5d5e525d8e64b995d",
    },
    {
      logId: "5177317175553620777",
      concreteTypeId:
        "47d9868a6266fb294f68de9d33690c9e627c37425d784cc82b7a7b7e5635b779",
    },
    {
      logId: "1981737794239509642",
      concreteTypeId:
        "1b808c062f9cb48a1ff8a0c33a9f590016122eed669e86a6c152c7b4a19d8239",
    },
    {
      logId: "537125673719950211",
      concreteTypeId:
        "077440f455d1eb83361f2183e189067ac3bf4bb6166b7a0630f371593ebb274e",
    },
    {
      logId: "4333504463729730816",
      concreteTypeId:
        "3c23b359912e25002dc894bca0ea08e15bcae108cb5ed17b9cb5ca3fed321e5d",
    },
  ],
  messagesTypes: [],
  configurables: [
    {
      name: "DEPLOYER",
      concreteTypeId:
        "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      offset: 9936,
      indirect: false,
    },
  ],
  errorCodes: {},
};

const storageSlots: StorageSlot[] = [
  {
    key: "7bb458adc1d118713319a5baa00a2d049dd64d2916477d2688d76970c898cd55",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    key: "7bb458adc1d118713319a5baa00a2d049dd64d2916477d2688d76970c898cd56",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    key: "bb79927b15d9259ea316f2ecb2297d6cc8851888a98278c0a2e03e1a091ea754",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    key: "bb79927b15d9259ea316f2ecb2297d6cc8851888a98278c0a2e03e1a091ea755",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
];

export class SimpleProxyInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    proxy_target: FunctionFragment;
    set_proxy_target: FunctionFragment;
    proxy_owner: FunctionFragment;
    initialize_proxy: FunctionFragment;
    set_proxy_owner: FunctionFragment;
  };
}

export class SimpleProxy extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: SimpleProxyInterface;
  declare functions: {
    proxy_target: InvokeFunction<[], Option<ContractIdOutput>>;
    set_proxy_target: InvokeFunction<[new_target: ContractIdInput], void>;
    proxy_owner: InvokeFunction<[], StateOutput>;
    initialize_proxy: InvokeFunction<
      [owner: IdentityInput, target: ContractIdInput],
      void
    >;
    set_proxy_owner: InvokeFunction<[new_owner: IdentityInput], void>;
  };

  constructor(id: string | Address, accountOrProvider: Account | Provider) {
    super(id, abi, accountOrProvider);
  }
}
