/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.2
*/

import {ContractFactory as __ContractFactory, decompressBytecode} from "fuels";
import type {Provider, Account, DeployContractOptions} from "fuels";

import {BasicHook} from "./BasicHook";

const bytecode = decompressBytecode(
  "H4sIAAAAAAAAA4VVTUwkRRR+/LjM/rm1DrDYI2xrgIwn20SIJiZUO8wOI9OhOoALWTpTGFCI7GZ2hHGNmszBg0f8h9tcTIynZk578NBHEy8cPRkuHoiQHZM1YaPJ+L2ent0OQe2k8rpeve+rV6++1200LNok6qbw6VmL7E9eM+gQzSavkXGk6HPqEl6mcV7YFHiT+s3isSjA5r28oHKBEiLbG6gZfw3+y8Vj82l9bAmVq+/onM/2e7Zezp9HzAJiLiLmkoJPZxE3XV/TeQHrS52nAZXx72H9SnmKemHZ/xn8QmXqpG3E5erAmcI4RG6/Cdo9sf6oPKQfkN8Fzg/ra8DsRFw+OPojrmvwBxGXGXFZp7h+BdcouC7GuPZbGP8AHM+B6wLsIPyNiEtGXOoU18/g6ixL+mhcEiFOq9zewZP1l2/yO+x7ydw+VSapC1bCdoyj7ojdicU+O8K+d8GR2QuMw234Q+wNz94mb5mIbXkSd2F3y+IqEfYdSNnnaBR7G3MYCsOrkrFQon77LapIOg+uqRgXctwrPZlbf/OePMfaG0Zmv/0+YSDf6P11Y/rx+2vQwsCQ3R14M43EVVjMxRC0Ec5hB5Eb5ziUHZbedOirsm/QviIjjnSMewS1RmxvtTzVbIax2evtuKHYvinW4FB+GPshDnYw/5JMOtmgUqAOaPha0imRsSYI807EdqbWx4I+57vAuK3ZxzGXOPeUM14dLeDMhRL13QVmo0SVUrjeXd7AulcJ0s4qcBZqWSNj0Wf9AzdGwlkJisd0C/pegj483PcvOOtA2umWwpVSzCu5hWtiHaAXCl5WkDftF8L+Qc7AFHBeM5UflqNTyGEFQ2OgxziffvcrWVH0lJrdM1u6kHxHX4a6mN1DLR77KmrWN/Xsvqlu1u/pecm2wTbpfloFR6smrgldoCYKNcFIzU9W+9y5qrFosa9VE4V83KwcZe0o1MQDBvqpLEU1WeB8R6pp9xXgJHJVZDiaWrgbJNwx4r3Vrfp9vag4j/uMSbvzVbFclWJ1m2sy9jXR9W8S7W8NlYwMapuDDqcPCN8MrWdqAlZpRwh9TML43edzvsCahF+w3zi02DeYhJaSNrgmiTX+DPoWfeejz4E7DPvy+RCX8xWwMoZNsfZ4v7B+rgV/WM/Ei9nuT4w/BX3BuT0yaQe5foucd7sOCLl3xXIXRuaA9IMaf+86IowwHlEb0/U/GPoPTLxGOl4jb6ZG+Oaa4XlmfNNz0P+4AwFdFm0LfY3z8MiSGfHrM84xEeM/Oc3vORZ5szUqz0Gv0EQRtUm6oVauJh1Lch+F3y3+DxyJy6ih39bkYsP6cfevIMoDunSthHbJxHxf21aatca5F48oAdx2DPeQcfoBMDYwwLcxOEs6OstJ7CwTZ9RK/kutzLNqhX9Vu0byjBr1tHn5zrxcjZbCPq6RyJuoCfoD2Njd9TBu+Z3N1XLx7a3yneLG+t2t9ZX1zQ/5T9vy316/s3mW//0PlkutPzI/TTzR//nVlj3nR/bjfwBK7HT2yAcAAA=="
);

export class BasicHookFactory extends __ContractFactory<BasicHook> {
  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, BasicHook.abi, accountOrProvider, BasicHook.storageSlots);
  }

  static deploy(wallet: Account, options: DeployContractOptions = {}) {
    const factory = new BasicHookFactory(wallet);
    return factory.deploy(options);
  }
}
