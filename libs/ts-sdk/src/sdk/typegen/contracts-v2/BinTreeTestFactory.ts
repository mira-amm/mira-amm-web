/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.2
*/

import {ContractFactory as __ContractFactory, decompressBytecode} from "fuels";
import type {Provider, Account, DeployContractOptions} from "fuels";

import {BinTreeTest} from "./BinTreeTest";

const bytecode = decompressBytecode(
  ""
);

export class BinTreeTestFactory extends __ContractFactory<BinTreeTest> {
  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(
      bytecode,
      BinTreeTest.abi,
      accountOrProvider,
      BinTreeTest.storageSlots
    );
  }

  static deploy(wallet: Account, options: DeployContractOptions = {}) {
    const factory = new BinTreeTestFactory(wallet);
    return factory.deploy(options);
  }
}
