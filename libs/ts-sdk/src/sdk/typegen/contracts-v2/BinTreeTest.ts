/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.2
*/

import {Contract as __Contract, Interface} from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  FunctionFragment,
  InvokeFunction,
} from "fuels";

import type {Option} from "./common";

const abi = {
  programType: "contract",
  specVersion: "1.1",
  encodingVersion: "1",
  concreteTypes: [
    {
      type: "b256",
      concreteTypeId:
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
    },
    {
      type: "bool",
      concreteTypeId:
        "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
    },
    {
      type: "enum std::option::Option<u32>",
      concreteTypeId:
        "97a75a6d6e892f11f5032fa516e39675b76377c3313d64f465a2c77c34a9e600",
      metadataTypeId: 1,
      typeArguments: [
        "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      ],
    },
    {
      type: "u32",
      concreteTypeId:
        "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
    },
  ],
  metadataTypes: [
    {
      type: "()",
      metadataTypeId: 0,
    },
    {
      type: "enum std::option::Option",
      metadataTypeId: 1,
      components: [
        {
          name: "None",
          typeId: 0,
        },
        {
          name: "Some",
          typeId: 2,
        },
      ],
      typeParameters: [2],
    },
    {
      type: "generic T",
      metadataTypeId: 2,
    },
  ],
  functions: [
    {
      name: "add_to_bin_tree",
      inputs: [
        {
          name: "id",
          concreteTypeId:
            "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
        },
      ],
      output:
        "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      name: "find_first_left",
      inputs: [
        {
          name: "id",
          concreteTypeId:
            "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
        },
      ],
      output:
        "97a75a6d6e892f11f5032fa516e39675b76377c3313d64f465a2c77c34a9e600",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      name: "find_first_right",
      inputs: [
        {
          name: "id",
          concreteTypeId:
            "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
        },
      ],
      output:
        "97a75a6d6e892f11f5032fa516e39675b76377c3313d64f465a2c77c34a9e600",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      name: "read_level0",
      inputs: [],
      output:
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      name: "read_level1",
      inputs: [
        {
          name: "key",
          concreteTypeId:
            "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
        },
      ],
      output:
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      name: "read_level2",
      inputs: [
        {
          name: "key",
          concreteTypeId:
            "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
        },
      ],
      output:
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      name: "remove_from_bin_tree",
      inputs: [
        {
          name: "id",
          concreteTypeId:
            "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
        },
      ],
      output:
        "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
  ],
  loggedTypes: [],
  messagesTypes: [],
  configurables: [],
  errorCodes: {},
};

const storageSlots: StorageSlot[] = [
  {
    key: "b6a09c0c47347937abd5c80c8bdba06d8ed97271425c82413555b44f226f41ad",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
];

export class BinTreeTestInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    add_to_bin_tree: FunctionFragment;
    find_first_left: FunctionFragment;
    find_first_right: FunctionFragment;
    read_level0: FunctionFragment;
    read_level1: FunctionFragment;
    read_level2: FunctionFragment;
    remove_from_bin_tree: FunctionFragment;
  };
}

export class BinTreeTest extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: BinTreeTestInterface;
  declare functions: {
    add_to_bin_tree: InvokeFunction<[id: BigNumberish], boolean>;
    find_first_left: InvokeFunction<[id: BigNumberish], Option<number>>;
    find_first_right: InvokeFunction<[id: BigNumberish], Option<number>>;
    read_level0: InvokeFunction<[], string>;
    read_level1: InvokeFunction<[key: string], string>;
    read_level2: InvokeFunction<[key: string], string>;
    remove_from_bin_tree: InvokeFunction<[id: BigNumberish], boolean>;
  };

  constructor(id: string | Address, accountOrProvider: Account | Provider) {
    super(id, abi, accountOrProvider);
  }
}
