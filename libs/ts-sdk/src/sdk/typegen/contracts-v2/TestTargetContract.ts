/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.2
*/

import {Contract as __Contract, Interface} from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from "fuels";

export type TestTargetContractConfigurables = Partial<{
  VERSION: BigNumberish;
}>;

const abi = {
  programType: "contract",
  specVersion: "1.1",
  encodingVersion: "1",
  concreteTypes: [
    {
      type: "u64",
      concreteTypeId:
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
    },
  ],
  metadataTypes: [],
  functions: [
    {
      name: "version",
      inputs: [],
      output:
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      attributes: null,
    },
  ],
  loggedTypes: [],
  messagesTypes: [],
  configurables: [
    {
      name: "VERSION",
      concreteTypeId:
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      offset: 1000,
      indirect: false,
    },
  ],
  errorCodes: {},
};

const storageSlots: StorageSlot[] = [];

export class TestTargetContractInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    version: FunctionFragment;
  };
}

export class TestTargetContract extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: TestTargetContractInterface;
  declare functions: {
    version: InvokeFunction<[], BN>;
  };

  constructor(id: string | Address, accountOrProvider: Account | Provider) {
    super(id, abi, accountOrProvider);
  }
}
